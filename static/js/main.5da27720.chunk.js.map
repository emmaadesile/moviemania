{"version":3,"sources":["assets/images/avengers_endgame.jpg","assets/images/arrow-wallpaper.jpg","assets/images/moviemania-logo.svg","useDataApi.js","components/Video/VideoStyles.js","components/Video/index.js","components/Loader/index.js","components/LoadMore/LoadMoreStyles.js","components/LoadMore/index.js","components/Movies/MoviesStyles.js","components/Movies/index.js","components/TvShows/TvShowsStyles.js","components/TvShows/index.js","components/VideoDetails/VideoDetailsStyles.js","ErrorBoundary.js","components/VideoDetails/index.js","Routes/index.js","components/Navigation/Navigation.styles.js","components/Navigation/index.js","components/Footer/index.js","App.js","index.js"],"names":["module","exports","apiKey","process","baseURL","useDataAPI","videoType","page","useState","videos","setVideos","isError","setIsError","videoPage","endpoint","useEffect","a","async","axios","fetchedVideos","storeVideos","data","results","fetchVideos","initialData","storedVideos","map","result","title","vote_count","id","genre_ids","poster_path","original_name","vote_average","first_air_date","release_date","Video","styled","div","VideoInfo","VideoCard","releaseDate","video","type","Date","formattedDate","format","src","alt","className","Loading","Loader","Container","ButtonText","p","LoadMore","props","onClick","handleClick","Wrapper","ContainerFluid","HeroImage","require","MovieGridContainer","Movies","length","movie","to","key","console","log","TvShowGridContainer","TvShows","show","MoviePoster","img","PlayButton","button","VideoTrailer","ErrorBoundary","state","hasError","error","info","this","children","Component","VideoDetails","pathname","window","location","videoId","replace","test","videoDetailsEndpoint","videoTrailerEndpoint","getVideoProps","backdrop_path","overview","videoTitle","trailerId","videoDetails","setVideoDetails","isLoading","setisLoading","showVideoTrailer","setShowVideoTrailer","storeVideoDetails","date","uri","Promise","all","fetch","then","resp","json","fetchedVideoDetails","fetchVideoDetails","onEscapeKeyPress","event","keyCode","addEventListener","removeEventListener","aria-labelledby","role","allowFullScreen","frameBorder","VideoDetailsWithErrorBoundary","Routes","path","Nav","nav","UpperNav","LowerNav","Logo","Navigation","React","Background","Footer","href","theme","specialFont","GlobalStyle","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"mHAAAA,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,0NCGrCC,EAASC,mCACTC,EAAUD,+BAwDDE,EAtDI,SAACC,EAAWC,GAAU,IAAD,EACVC,mBAAS,IADC,mBAC/BC,EAD+B,KACvBC,EADuB,OAERF,oBAAS,GAFD,mBAE/BG,EAF+B,KAEtBC,EAFsB,KAGhCC,EAAYN,GAAc,EAE1BO,EACU,UAAdR,EAAA,UACOF,EADP,mCACyCF,EADzC,wDAC+FW,GAD/F,UAEOT,EAFP,gCAEsCF,EAFtC,wDAE4FW,GAE9FE,qBAAU,YACY,mBAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAEYE,IAAMJ,IAFlB,OAEVK,EAFU,OAGhBC,EAAYD,EAAcE,KAAKC,SAHf,gDAKhBV,GAAW,GALK,wDAQpBW,KACC,CAACT,EAAUP,IAEd,IAAMa,EAAc,SAACI,GACnB,IAAMC,EAAeD,EAAYE,KAAI,SAAAC,GAYnC,MAAO,CACLC,MAFED,EATFC,MAYAC,WAHEF,EARFE,WAYAC,GAJEH,EAPFG,GAYAC,UALEJ,EANFI,UAYAC,YANEL,EALFK,YAYAC,cAPEN,EAJFM,cAYAC,aAREP,EAHFO,aAYAC,eATER,EAFFQ,eAYAC,aAVET,EADFS,iBAeJ1B,EAAUe,IAGZ,MAAO,CAAChB,EAAQE,I,inBCvDlB,IAAM0B,EAAQC,IAAOC,IAAV,KAWLC,EAAYF,IAAOC,IAAV,KCmBAE,EA5BG,SAAC,GAAqB,IAClCC,EACAd,EAFee,EAAkB,EAAlBA,MAIN,OAJwB,EAAXC,MAKxBF,EAAc,IAAIG,KAAKF,EAAMR,gBAC7BP,EAAQe,EAAMV,gBAEdS,EAAc,IAAIG,KAAKF,EAAMP,cAC7BR,EAAQe,EAAMf,OAGhB,IAAMkB,EAAgBC,iBAAOL,EAAa,gBAE1C,OACE,kBAACL,EAAD,KACE,yBACEW,IAAG,0CAAqCL,EAAMX,aAC9CiB,IAAI,iBAEN,kBAACT,EAAD,KACE,uBAAGU,UAAU,cAActB,GAC3B,uBAAGsB,UAAU,eAAeJ,M,8tECtBpC,IAAMK,EAAUb,IAAOC,IAAV,KAkIEa,EATA,kBACb,kBAACD,EAAD,KACE,uCACA,+BACA,+BACA,iC,qbChIJ,IAAME,EAAYf,IAAOC,IAAV,KASTe,EAAahB,IAAOiB,EAAV,KCDDC,EANE,SAACC,GAAD,OACf,kBAACJ,EAAD,KACE,kBAACC,EAAD,CAAYI,QAASD,EAAME,aAA3B,e,gxBCJJ,IAAMC,EAAUtB,IAAOC,IAAV,KAKPsB,EAAiBvB,IAAOC,IAAV,KAKduB,EAAYxB,IAAOC,IAAV,IAMWwB,EAAQ,MAG5BC,EAAqB1B,IAAOC,IAAV,KCwBT0B,EAhCA,SAAAR,GAAU,IAAD,EACIpD,EAAW,SADf,mBACfI,EADe,KACPE,EADO,KAQtB,OACE,kBAACiD,EAAD,KACGjD,GAAW,4DACQ,IAAnBF,EAAOyD,QAAkBvD,EAGxB,oCACE,kBAACmD,EAAD,MACA,kBAACD,EAAD,KACE,kBAACG,EAAD,KACGvD,EAAOiB,KAAI,SAAAyC,GAAK,OACf,kBAAC,IAAD,CAAMC,GAAE,iBAAYD,EAAMrC,IAAMuC,IAAKF,EAAMrC,IACzC,kBAAC,EAAD,CAAOuC,IAAKF,EAAMrC,GAAIc,KAAK,QAAQD,MAAOwB,SAIhD,kBAAC,EAAD,CAAUR,YAAa,WAnB/BW,QAAQC,IAAI,yBAOR,kBAAC,EAAD,Q,gxBCvBR,IAAMX,EAAUtB,IAAOC,IAAV,KAKPsB,EAAiBvB,IAAOC,IAAV,KAKduB,EAAYxB,IAAOC,IAAV,IAMWwB,EAAQ,MAG5BS,GAAsBlC,IAAOC,IAAV,KCiBVkC,GA1BC,WAAO,IAAD,EACMpE,EAAW,MADjB,mBACbI,EADa,KACLE,EADK,KAGpB,OACE,kBAAC,EAAD,KACGA,GAAW,4DACO,IAAlBF,EAAOyD,QAAiBvD,EAGvB,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,KACE,kBAAC6D,GAAD,KACG/D,EAAOiB,KAAI,SAAAgD,GAAI,OACd,kBAAC,IAAD,CAAMN,GAAE,cAASM,EAAK5C,IAAMuC,IAAKK,EAAK5C,IACpC,kBAAC,EAAD,CAAOuC,IAAKK,EAAK5C,GAAIc,KAAK,KAAKD,MAAO+B,WARhD,kBAAC,EAAD,Q,moGCjBR,IAAMC,GAAcrC,IAAOsC,IAAV,MASXvC,GAAQC,IAAOC,IAAV,MA2DLsC,GAAavC,IAAOwC,OAAV,MAqBVtC,GAAYF,IAAOC,IAAV,MA4BTwC,GAAezC,IAAOC,IAAV,MC7FHyC,G,2MAtBbC,MAAQ,CAAEC,UAAU,G,iFAMFC,EAAOC,GACvBd,QAAQC,IAAI,oCAAqCY,EAAOC,K,+BAIxD,OAAIC,KAAKJ,MAAMC,SAEX,6BACE,iFAAsD,kBAAC,IAAD,CAAMd,GAAG,KAAT,QAAtD,eAICiB,KAAK5B,MAAM6B,Y,kDAflB,MAAO,CAACJ,UAAU,O,GAJMK,aC4BtBC,GAAe,SAAA/B,GACnB,IAD4B,EAbR,WAAO,IACnBgC,EAAaC,OAAOC,SAApBF,SACFG,EAAUH,EAASI,QAAQ,QAAS,IAGpCvF,EADQ,QACUwF,KAAKL,GAAY,QAAU,KAKnD,MAAO,CAAEM,qBAHiB,UAXZ5F,+BAWY,YAAiBG,EAAjB,YAA8BsF,EAA9B,oBAVbzF,mCAUa,+BAGK6F,qBAFL,UAZZ7F,+BAYY,YAAiBG,EAAjB,YAA8BsF,EAA9B,oBAXbzF,mCAWa,+BAc6B8F,GAA/CF,EAToB,EASpBA,qBAAsBC,EATF,EASEA,qBATF,EAWYxF,mBAVZ,CAC1B0B,aAAc,GACdgE,cAAe,GACfC,SAAU,GACVC,WAAY,GACZ1D,YAAa,GACb2D,UAAW,KAPe,mBAWrBC,EAXqB,KAWPC,EAXO,OAYM/F,oBAAS,GAZf,mBAYrBgG,EAZqB,KAYVC,EAZU,OAaoBjG,oBAAS,GAb7B,mBAarBkG,EAbqB,KAaHC,EAbG,OAcEnG,oBAAS,GAdX,mBAcrBG,EAdqB,KAcZC,EAdY,KAgB5BG,qBAAU,WAER,IAAM6F,EAAoB,SAAAvF,GAAS,IAmB7BwF,EACAT,EApB4B,EAS5B/E,EAAK,GAPPa,EAF8B,EAE9BA,aACAgE,EAH8B,EAG9BA,cACAC,EAJ8B,EAI9BA,SACAlE,EAL8B,EAK9BA,cACAL,EAN8B,EAM9BA,MACAO,EAP8B,EAO9BA,eACAC,EAR8B,EAQ9BA,aAOIiE,EAFFhF,EAAK,GADPZ,OAAUa,QAGc,GAAG+C,IACrByC,EAAQrD,EAARqD,IACM,QAKJhB,KAAKgB,IACbV,EAAaxE,EACbiF,EAAO,IAAIhE,KAAKT,KAEhBgE,EAAanE,EACb4E,EAAO,IAAIhE,KAAKV,IAGlB,IAAMO,EAAcK,iBAAO8D,EAAM,gBAEjCN,EAAgB,CACdrE,eACAgE,gBACAC,WACAC,aACA1D,cACA2D,gBAIsB,mBAAArF,EAAAC,OAAA,2EAAAD,EAAA,MAEY+F,QAAQC,IAAI,CAC5CC,MAAMlB,GAAsBmB,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAC9CH,MAAMjB,GAAsBkB,MAAK,SAAAC,GAAI,OAAIA,EAAKC,aAJ1B,OAEhBC,EAFgB,OAOtBT,EAAkBS,GAElBZ,GAAa,GATS,gDAWtB7F,GAAW,GAXW,wDAc1B0G,KACC,CAACvB,EAAsBC,EAAsBvC,IAEhD1C,qBAAU,WACR,IAAMwG,EAAmB,SAAAC,GACvB,GAAsB,KAAlBA,EAAMC,QAAgB,CACxB,IAAKf,EAAkB,OACvBC,GAAoB,KAKxB,OAFAjB,OAAOgC,iBAAiB,UAAWH,GAE5B,WACL7B,OAAOiC,oBAAoB,UAAWJ,OAvFd,IA4F1BrB,EAMEI,EANFJ,cACAE,EAKEE,EALFF,WACAD,EAIEG,EAJFH,SACAzD,EAGE4D,EAHF5D,YACAR,EAEEoE,EAFFpE,aACAmE,EACEC,EADFD,UAGF,OACE,oCACG1F,GAAW,0DACX6F,IAAc7F,EACb,kBAAC,EAAD,MAEA,oCACE,kBAAC,GAAD,KACE,kBAACgE,GAAD,CACE3B,IAAG,6CAAwCkD,GAC3CjD,IAAI,mBAEN,yBAAKC,UAAU,YACb,yBAAKA,UAAU,cACb,kBAAC,GAAD,KACE,4BAAKkD,GACL,uBAAGlD,UAAU,eAAb,iBAA0CR,GAC1C,uBAAGQ,UAAU,YAAYiD,GAEzB,yBAAKjD,UAAU,eACb,kBAAC2B,GAAD,CACEjC,KAAK,SACLc,QAAS,kBAAMiD,GAAoB,IACnCiB,kBAAgB,eAEhB,uBAAG1E,UAAU,gBACb,+CAGF,yBAAKA,UAAU,eACb,uBAAGA,UAAU,gBACb,8BAAOhB,EAAP,eAOXwE,GACC,kBAAC3B,GAAD,KACE,yBAAK7B,UAAU,gBACb,uBACE2E,KAAK,eACL3E,UAAU,cACV0E,kBAAgB,gBAChBlE,QAAS,kBAAMiD,GAAoB,OAGvC,4BACE3D,IAAG,wCAAmCqD,GACtCzE,MAAM,eACNkG,iBAAe,EACfC,YAAY,UAUb,SAASC,GAA8BvE,GACpD,OACE,kBAAC,GAAD,KACE,kBAAC,GAAiBA,IC9LxB,IAUewE,GAVA,kBACb,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAQC,KAAK,MACb,kBAAC,EAAD,CAAQA,KAAK,YACb,kBAAC,GAAD,CAASA,KAAK,QACd,kBAAC,GAAD,CAAcA,KAAK,kBACnB,kBAAC,GAAD,CAAcA,KAAK,uB,s+BCVvB,IAAMC,GAAM7F,IAAO8F,IAAV,MAKHC,GAAW/F,IAAOC,IAAV,MAQR+F,GAAWhG,IAAOC,IAAV,MA+BRgG,GAAOjG,IAAOsC,IAAV,MClBK4D,G,2MAvBbvD,MAAQ,G,wEAGN,OACE,kBAACkD,GAAD,KACE,kBAACE,GAAD,KACE,kBAACE,GAAD,CAAMvF,IAAKe,EAAQ,QAErB,kBAACuE,GAAD,KACE,yBAAKpF,UAAU,YACb,4BACE,kBAAC,IAAD,CAAMkB,GAAG,WAAT,WAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,OAAT,oB,GAfWqE,IAAMlD,W,8PCD/B,IAAMmD,GAAapG,IAAOC,IAAV,MAsBDoG,GARA,kBACb,kBAACD,GAAD,KACE,kDACiB,uBAAGE,KAAK,oCAAR,e,2bCbrB,IAAMC,GAAQ,CACZC,YAAa,mBAGTC,GAAcC,YAAH,MAeE,SAAAvF,GAAK,OAClBA,EAAMoF,MAAMC,YAAc,kBAAoB,oBA6BrCG,G,iLAbX,OACE,kBAAC,IAAD,CAAeJ,MAAOA,IACpB,yBAAK3F,UAAU,OACb,kBAAC6F,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,Y,GARQxD,aCnClB2D,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.5da27720.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avengers_endgame.8bef76c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-wallpaper.651a09d0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/moviemania-logo.24c12bfb.svg\";","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst apiKey = process.env.REACT_APP_TMDB_API_KEY;\nconst baseURL = process.env.REACT_APP_BASE_URL;\n\nconst useDataAPI = (videoType, page) => {\n  const [videos, setVideos] = useState([]);\n  const [isError, setIsError] = useState(false);\n  const videoPage = page ? page : 1;\n\n  const endpoint =\n    videoType === \"movie\"\n      ? `${baseURL}/discover/movie?api_key=${apiKey}&language=en-US&sort_by=popularity.desc&page=${videoPage}`\n      : `${baseURL}/discover/tv?api_key=${apiKey}&language=en-US&sort_by=popularity.desc&page=${videoPage}`;\n\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        const fetchedVideos = await axios(endpoint);\n        storeVideos(fetchedVideos.data.results);\n      } catch (error) {\n        setIsError(true);\n      }\n    };\n    fetchVideos();\n  }, [endpoint, page]);\n\n  const storeVideos = (initialData) => {\n    const storedVideos = initialData.map(result => {\n      const {\n        title,\n        vote_count,\n        id,\n        genre_ids,\n        poster_path,\n        original_name,\n        vote_average,\n        first_air_date,\n        release_date\n      } = result;\n      return {\n        title,\n        vote_count,\n        id,\n        genre_ids,\n        poster_path,\n        original_name,\n        vote_average,\n        first_air_date,\n        release_date\n      };\n    });\n    \n    setVideos(storedVideos);\n  };\n\n  return [videos, isError];\n};\n\nexport default useDataAPI;\n","import styled from \"styled-components\";\n\nconst Video = styled.div`\n  img {\n    width: 100%;\n    transition: transform s cubic-bezier(0.075, 0.82, 0.165, 1);\n    &:hover {\n      box-shadow: 0 16px 30px -8px rgba(0, 0, 0, 0.15);\n      transform: translateY(-8px);\n    }\n  }\n`;\n\nconst VideoInfo = styled.div`\n  cursor: pointer;\n\n  .movieTitle {\n    font-weight: 300;\n    font-size: 1.2em;\n    color: #000 !important;\n  }\n  .releaseDate {\n    font-weight: 300;\n    color: grey;\n    margin-top: -10px;\n\n    &:hover {\n      color: grey !important;\n    }\n  }\n`;\n\nexport { Video, VideoInfo };\n","import React from \"react\";\nimport { format } from \"date-fns\";\nimport { Video, VideoInfo } from \"./VideoStyles\";\n\nconst VideoCard = ({ video, type }) => {\n  let releaseDate;\n  let title;\n\n  if (type === \"tv\") {\n    releaseDate = new Date(video.first_air_date);\n    title = video.original_name;\n  } else {\n    releaseDate = new Date(video.release_date);\n    title = video.title;\n  }\n\n  const formattedDate = format(releaseDate, \"MMM DD, YYYY\");\n\n  return (\n    <Video>\n      <img\n        src={`https://image.tmdb.org/t/p/w342/${video.poster_path}`}\n        alt=\"movie_poster\"\n      />\n      <VideoInfo>\n        <p className=\"movieTitle\">{title}</p>\n        <p className=\"releaseDate\">{formattedDate}</p>\n      </VideoInfo>\n    </Video>\n  );\n};\n\nexport default VideoCard;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n// Loader Reference: https://codepen.io/hafizfattah/pen/AbBtc\nconst Loading = styled.div`\n  margin: 200px auto;\n  min-height: 100vh;\n\n  h1 {\n    font-family: \"Actor\", sans-serif;\n    color: #fff;\n    font-size: 16px;\n    letter-spacing: 1px;\n    font-weight: 200;\n    text-align: center;\n  \n\n  span {\n    width: 16px;\n    height: 16px;\n    border-radius: 50%;\n    display: inline-block;\n    position: absolute;\n    left: 50%;\n    margin-left: -10px;\n    -webkit-animation: 3s infinite linear;\n    -moz-animation: 3s infinite linear;\n    -o-animation: 3s infinite linear;\n  }\n\n  span:nth-child(2) {\n    background: #e84c3d;\n    -webkit-animation: kiri 1.2s infinite linear;\n    -moz-animation: kiri 1.2s infinite linear;\n    -o-animation: kiri 1.2s infinite linear;\n  }\n\n  span:nth-child(3) {\n    background: #f1c40f;\n    z-index: 100;\n  }\n\n  @-webkit-keyframes kanan {\n    0% {\n      -webkit-transform: translateX(20px);\n    }\n\n    50% {\n      -webkit-transform: translateX(-20px);\n    }\n\n    100% {\n      -webkit-transform: translateX(20px);\n      z-index: 200;\n    }\n  }\n\n  @-moz-keyframes kanan {\n    0% {\n      -moz-transform: translateX(20px);\n    }\n    50% {\n      -moz-transform: translateX(-20px);\n    }\n    100% {\n      -moz-transform: translateX(20px);\n      z-index: 200;\n    }\n  }\n\n  @-o-keyframes kanan {\n    0% {\n      -o-transform: translateX(20px);\n    }\n\n    50% {\n      -o-transform: translateX(-20px);\n    }\n\n    100% {\n      -o-transform: translateX(20px);\n      z-index: 200;\n    }\n  }\n\n  @-webkit-keyframes kiri {\n    0% {\n      -webkit-transform: translateX(-20px);\n      z-index: 200;\n    }\n    50% {\n      -webkit-transform: translateX(20px);\n    }\n    100% {\n      -webkit-transform: translateX(-20px);\n    }\n  }\n\n  @-moz-keyframes kiri {\n    0% {\n      -moz-transform: translateX(-20px);\n      z-index: 200;\n    }\n    50% {\n      -moz-transform: translateX(20px);\n    }\n    100% {\n      -moz-transform: translateX(-20px);\n    }\n  }\n\n  @-o-keyframes kiri {\n    0% {\n      -o-transform: translateX(-20px);\n      z-index: 200;\n    }\n    50% {\n      -o-transform: translateX(20px);\n    }\n    100% {\n      -o-transform: translateX(-20px);\n    }\n  }\n`;\n\nconst Loader = () => (\n  <Loading>\n    <h1>LOADING</h1>\n    <span />\n    <span />\n    <span />\n  </Loading>\n);\n\nexport default Loader;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100%;\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  height: 60px;\n  margin-bottom: 40px;\n`;\n\nconst ButtonText = styled.p`\n  font-weight: 600;\n  font-size: 1.2em;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n  border: 1.5px solid #ddd;\n  padding: 15px 70px;\n  cursor: pointer;\n`\n\nexport { Container, ButtonText }","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport { Container, ButtonText } from \"./LoadMoreStyles\";\n\nconst LoadMore = (props) => (\n  <Container>\n    <ButtonText onClick={props.handleClick}>Load More</ButtonText>\n  </Container>\n);\n\nexport default LoadMore;\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst ContainerFluid = styled.div`\n  display: grid;\n  padding: 0 50px;\n`;\n\nconst HeroImage = styled.div`\n  height: 600px;\n  clip-path: polygon(0 0, 0 98%, 100% 92%, 100% 0);\n  background-position: top;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-image: url(${require(\"../../assets/images/avengers_endgame.jpg\")});\n`;\n\nconst MovieGridContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  grid-gap: 20px;\n  justify-items: center;\n  align-items: start;\n  background: white;\n  margin: -80px 0 auto;\n  z-index: 1000;\n  padding: 30px 20px;\n`;\n\nexport { Wrapper, ContainerFluid, HeroImage, MovieGridContainer };\n","import React from 'react';\nimport { Link } from \"@reach/router\";\nimport useDataAPI from '../../useDataApi';\nimport Video from \"../Video\";\nimport Loader from \"../Loader\";\nimport LoadMore from \"../LoadMore\";\nimport {\n  Wrapper,\n  ContainerFluid,\n  HeroImage,\n  MovieGridContainer\n} from \"./MoviesStyles\";\n\nconst Movies = props => {\n  const [videos, isError] = useDataAPI('movie');\n  // const { uri } = props\n\n  function handleLoadMore () {\n    console.log('load more movies')\n  }\n\n  return (\n    <Wrapper>\n      {isError && <h2>Oops something went wrong...</h2>}\n      {videos.length  === 0 && !isError? (\n        <Loader />\n      ) : (\n        <>\n          <HeroImage />\n          <ContainerFluid>\n            <MovieGridContainer>\n              {videos.map(movie => (\n                <Link to={`/movie/${movie.id}`} key={movie.id}>\n                  <Video key={movie.id} type=\"movie\" video={movie} />\n                </Link>\n              ))}\n            </MovieGridContainer>\n            <LoadMore handleClick={() => handleLoadMore()} />\n          </ContainerFluid>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Movies;\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst ContainerFluid = styled.div`\n  display: grid;\n  padding: 0 50px;\n`;\n\nconst HeroImage = styled.div`\n  height: 600px;\n  clip-path: polygon(0 0, 0 98%, 100% 92%, 100% 0);\n  background-position: top;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-image: url(${require(\"../../assets/images/arrow-wallpaper.jpg\")});\n`;\n\nconst TvShowGridContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  grid-gap: 20px;\n  justify-items: center;\n  align-items: start;\n  background: white;\n  margin: -80px 0 auto;\n  z-index: 1000;\n  padding: 30px 20px;\n`;\n\nexport { Wrapper, ContainerFluid, HeroImage, TvShowGridContainer };\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport useDataAPI from \"../../useDataApi\";\nimport {\n  ContainerFluid,\n  HeroImage,\n  TvShowGridContainer,\n  Wrapper\n} from \"./TvShowsStyles\";\nimport Video from \"../Video\";\nimport Loader from \"../Loader\";\n\nconst TvShows = () => {\n  const [videos, isError] = useDataAPI(\"tv\");\n\n  return (\n    <Wrapper>\n      {isError && <h2>Oops something went wrong...</h2>}\n      {videos.length === 0 && !isError ? (\n        <Loader />\n      ) : (\n        <>\n          <HeroImage />\n          <ContainerFluid>\n            <TvShowGridContainer>\n              {videos.map(show => (\n                <Link to={`/tv/${show.id}`} key={show.id}>\n                  <Video key={show.id} type=\"tv\" video={show} />\n                </Link>\n              ))}\n            </TvShowGridContainer>\n          </ContainerFluid>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default TvShows;\n","import styled from \"styled-components\";\n\nconst MoviePoster = styled.img`\n  height: 800px;\n  width: 100%;\n  object-fit: cover;\n  z-index: -10;\n  position: absolute;\n  top: 0;\n`;\n\nconst Video = styled.div`\n  .backdrop {\n    color: #eee;\n  }\n\n  .backdropBg {\n    @media (min-width: 768px) {\n      grid-template-columns: 1fr;\n\n      .moreDetails {\n        grid-template-columns: repeat(2, 1fr);\n      }\n    }\n\n    @media (min-width: 992px) {\n      grid-template-columns: 1fr 1fr;\n    }\n\n    @media (min-width: 576px) {\n      .moreDetails {\n        grid-template-columns: repeat(2, 1fr);\n      }\n    }\n\n    @media (min-width: 375px) {\n      .moreDetails {\n        grid-template-columns: repeat(2, 1fr);\n      }\n    }\n\n    display: grid;\n    align-items: center;\n    justify-items: center;\n    width: 100%;\n    height: 700px;\n\n    top: 92px;\n    background-color: rgba(0, 0, 0, 0.7);\n\n    .moreDetails {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(70px, 1fr));\n      grid-gap: 15px;\n\n      .videoRating {\n        color: #ddd;\n\n        .fa-fire {\n          border-radius: 50%;\n          border: 1px solid #ddd;\n          padding: 5px 7px;\n          color: #e50603;\n          margin-right: 5px;\n        }\n      }\n    }\n  }\n`;\n\nconst PlayButton = styled.button`\n  background-color: #e50603;\n  padding: 6px 10px;\n  cursor: pointer;\n  font-size: 1.2rem;\n  border-radius: 4px;\n  transition: 0.5s background-color cubic-bezier(0.075, 0.82, 0.165, 1);\n  color: white;\n  border: none;\n  font-size: 0.9rem;\n  justify-self: start;\n\n  &:hover {\n    background-color: #d84443;\n  }\n\n  .fa-play {\n    margin-right: 5px;\n  }\n`;\n\nconst VideoInfo = styled.div`\n  max-width: 450px;\n  padding: 10px 20px;\n\n  h1 {\n    font-size: 3.2rem;\n    font-family: \"DINNextW01-Bold\";\n    text-align: left;\n  }\n\n  p {\n    font-family: \"Helvetica Neue\";\n    line-height: 1.5rem;\n    font-size: 1.1rem;\n  }\n\n  .releaseDate {\n    font-size: 0.9rem;\n    margin-top: -2.2rem;\n    color: #999;\n  }\n\n  .overview {\n    line-height: 25px;\n    color: #eee;\n  }\n`;\n\nconst VideoTrailer = styled.div`\n  iframe {\n    width: 100%;\n    height: 600px;\n\n    @media (max-width: 600px) {\n      width: 576px;\n      height: 450px;\n    }\n\n    @media (max-width: 400px) {\n      width: 378px;\n      height: 300px;\n    }\n  }\n\n  left: 0px;\n  top: 90px;\n  z-index: 100;\n  position: absolute;\n  width: 100%;\n  height: 100vh;\n  overflow: hidden;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-items: center;\n\n  .closeTrailer {\n    background: #000;\n    width: 100%;\n    height: 50px;\n    display: grid;\n    grid-template-columns: 1fr;\n    justify-items: end;\n    align-items: center;\n\n    .fa-times {\n      font-size: 20px;\n      color: #555;\n      font-weight: 900;\n      cursor: pointer;\n      margin-right: 10px;\n\n      &:hover {\n        color: #777;\n      }\n    }\n  }\n`;\n\nexport { Video, PlayButton, VideoInfo, VideoTrailer, MoviePoster };\n","import React, {Component} from 'react';\nimport {Link} from '@reach/router';\n\nclass ErrorBoundary extends Component {\n  state = { hasError: false}\n\n  static getDerivedStateFromError() {\n    return {hasError: true}\n  }\n\n  componentDidCatch(error, info) {\n    console.log('An error occured in the component', error, info)\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <h2>An error occurred while making the request. Click <Link to='/'>here</Link>to go home</h2>\n        </div>\n      )\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","// eslint-disable\nimport React, { useState, useEffect } from \"react\";\nimport { format } from \"date-fns\";\nimport Loader from \"../Loader\";\n\nimport {\n  Video,\n  PlayButton,\n  VideoInfo,\n  VideoTrailer,\n  MoviePoster\n} from \"./VideoDetailsStyles\";\nimport ErrorBoundary from \"../../ErrorBoundary\";\n\nconst baseURL = process.env.REACT_APP_BASE_URL;\nconst apiKey = process.env.REACT_APP_TMDB_API_KEY;\n\n// get the props for fetching the video details\nconst getVideoProps = () => {\n  const { pathname } = window.location;\n  const videoId = pathname.replace(/[\\D]/g, \"\");\n\n  const regEx = /movie/;\n  const videoType = regEx.test(pathname) ? \"movie\" : \"tv\";\n\n  const videoDetailsEndpoint = `${baseURL}/${videoType}/${videoId}?api_key=${apiKey}&append_to_response=credits`;\n  const videoTrailerEndpoint = `${baseURL}/${videoType}/${videoId}?api_key=${apiKey}&append_to_response=videos`;\n\n  return { videoDetailsEndpoint, videoTrailerEndpoint };\n};\n\nconst VideoDetails = props => {\n  const initialVideoDetails = {\n    vote_average: \"\",\n    backdrop_path: \"\",\n    overview: \"\",\n    videoTitle: \"\",\n    releaseDate: \"\",\n    trailerId: \"\"\n  };\n  const { videoDetailsEndpoint, videoTrailerEndpoint } = getVideoProps();\n\n  const [videoDetails, setVideoDetails] = useState(initialVideoDetails);\n  const [isLoading, setisLoading] = useState(false);\n  const [showVideoTrailer, setShowVideoTrailer] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    // store video details\n    const storeVideoDetails = data => {\n      const {\n        vote_average,\n        backdrop_path,\n        overview,\n        original_name,\n        title,\n        first_air_date,\n        release_date\n      } = data[0];\n\n      const {\n        videos: { results }\n      } = data[1];\n\n      const trailerId = results[0].key;\n      const { uri } = props;\n      const regEx = /movie/;\n\n      let date;\n      let videoTitle;\n\n      if (regEx.test(uri)) {\n        videoTitle = title;\n        date = new Date(release_date);\n      } else {\n        videoTitle = original_name;\n        date = new Date(first_air_date);\n      }\n\n      const releaseDate = format(date, \"MMM DD, YYYY\");\n\n      setVideoDetails({\n        vote_average,\n        backdrop_path,\n        overview,\n        videoTitle,\n        releaseDate,\n        trailerId\n      });\n    }\n\n    const fetchVideoDetails = async () => {\n      try {\n        const fetchedVideoDetails = await Promise.all([\n          fetch(videoDetailsEndpoint).then(resp => resp.json()),\n          fetch(videoTrailerEndpoint).then(resp => resp.json())\n        ]);\n\n        storeVideoDetails(fetchedVideoDetails);\n\n        setisLoading(false);\n      } catch (error) {\n        setIsError(true);\n      }\n    };\n    fetchVideoDetails();\n  }, [videoDetailsEndpoint, videoTrailerEndpoint, props]);\n\n  useEffect(() => {\n    const onEscapeKeyPress = event => {\n      if (event.keyCode === 27) {\n        if (!showVideoTrailer) return;\n        setShowVideoTrailer(false)\n      }\n    }\n    window.addEventListener('keydown', onEscapeKeyPress);\n\n    return () => {\n      window.removeEventListener('keydown', onEscapeKeyPress)\n    }\n  })\n\n  const {\n    backdrop_path,\n    videoTitle,\n    overview,\n    releaseDate,\n    vote_average,\n    trailerId\n  } = videoDetails;\n\n  return (\n    <>\n      {isError && <h2>Oops, something went wrong</h2>}\n      {isLoading && !isError ? (\n        <Loader />\n      ) : (\n        <>\n          <Video>\n            <MoviePoster\n              src={`https://image.tmdb.org/t/p/original${backdrop_path}`}\n              alt=\"video_backdrop\"\n            />\n            <div className=\"backdrop\">\n              <div className=\"backdropBg\">\n                <VideoInfo>\n                  <h1>{videoTitle}</h1>\n                  <p className=\"releaseDate\">Release Date: {releaseDate}</p>\n                  <p className=\"overview\">{overview}</p>\n\n                  <div className=\"moreDetails\">\n                    <PlayButton\n                      type=\"button\"\n                      onClick={() => setShowVideoTrailer(true)}\n                      aria-labelledby=\"play-button\"\n                    >\n                      <i className=\"fas fa-play\"></i>\n                      <span>Play Trailer</span>\n                    </PlayButton>\n\n                    <div className=\"videoRating\">\n                      <i className=\"fas fa-fire\"></i>\n                      <span>{vote_average} / 10</span>\n                    </div>\n                  </div>\n                </VideoInfo>\n              </div>\n            </div>\n          </Video>\n          {showVideoTrailer && (\n            <VideoTrailer>\n              <div className=\"closeTrailer\">\n                <i\n                  role=\"close-button\"\n                  className=\"fa fa-times\"\n                  aria-labelledby=\"close-trailer\"\n                  onClick={() => setShowVideoTrailer(false)}\n                ></i>\n              </div>\n              <iframe\n                src={`https://www.youtube.com/embed/${trailerId}`}\n                title=\"videoTrailer\"\n                allowFullScreen\n                frameBorder=\"0\"\n              ></iframe>\n            </VideoTrailer>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default function VideoDetailsWithErrorBoundary(props) {\n  return (\n    <ErrorBoundary>\n      <VideoDetails {...props} />\n    </ErrorBoundary>\n  );\n}\n","import React from \"react\";\nimport { Router } from \"@reach/router\";\nimport Movies from \"../components/Movies\";\nimport Tvshows from \"../components/TvShows\";\nimport VideoDetails from \"../components/VideoDetails\";\n\nconst Routes = () => (\n  <Router>\n    <Movies path=\"/\" />\n    <Movies path=\"/movies\" />\n    <Tvshows path=\"/tv\" />\n    <VideoDetails path=\"/tv/:videoId/\" />\n    <VideoDetails path=\"/movie/:videoId/\" />\n  </Router>\n);\n\nexport default Routes;\n","import styled from \"styled-components\";\n\nconst Nav = styled.nav`\n  height: 92px;\n  background: #22262a;\n`;\n\nconst UpperNav = styled.div`\n  height: 52px;\n  border: 1px solid #393939;\n  display: grid;\n  grid-template-columns: 1fr;\n  place-items: center;\n`;\n\nconst LowerNav = styled.div`\n  height: 40px;\n  display: grid;\n  grid-template-columns: 1fr;\n  align-items: center;\n  justify-items: center;\n  color: white;\n\n  .navItems {\n    width: 200px;\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    justify-items: center;\n\n    a {\n      text-decoration: none;\n      color: #fff !important;\n      transition: 0.3s color ease-in-out;\n      display: block;\n    }\n\n    a:hover {\n      color: #777 !important;\n    }\n\n    li {\n      list-style: none;\n    }\n  }\n`;\n\nconst Logo = styled.img`\n  height: 2.5rem;\n  width: auto;\n`;\n\nexport { Nav, UpperNav, LowerNav, Logo };\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport { Nav, UpperNav, LowerNav, Logo } from \"./Navigation.styles\";\n\nclass Navigation extends React.Component {\n  state = {};\n\n  render() {\n    return (\n      <Nav>\n        <UpperNav>\n          <Logo src={require(\"../../assets/images/moviemania-logo.svg\")} />\n        </UpperNav>\n        <LowerNav>\n          <div className=\"navItems\">\n            <li>\n              <Link to=\"/movies\">MOVIES</Link>\n            </li>\n            <li>\n              <Link to=\"/tv\">TV SHOWS</Link>\n            </li>\n          </div>\n        </LowerNav>\n      </Nav>\n    );\n  }\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Background = styled.div`\n  height: 70px;\n  background: #393939;\n  color: #fff;\n  text-align: center;\n  display: grid;\n  place-items: center;\n\n  a {\n    text-decoration: none;\n    color: red;\n  }\n`;\n\nconst Footer = () => (\n  <Background>\n    <p>\n      Made with ❤ by <a href=\"https://twitter.com/emma_adesile\">Emmanuel</a>\n    </p>\n  </Background>\n);\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Routes from \"./Routes\";\nimport Navigation from \"./components/Navigation\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\n\nconst theme = {\n  specialFont: \"DINNextW01-Bold\"\n};\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: \"DINNextW01-Bold\";\n    src: url(\"./assets/fonts/DINNextW01-Bold.otf\") format(otf);\n  }\n\n  * {\n    outline: none;\n  }\n\n  body {\n    font-size: 1rem;\n  }\n\n  html {\n    font-family: ${props =>\n      props.theme.specialFont ? \"DINNextW01-Bold\" : \"Helvetica Neue\"};\n    box-sizing: border-box;\n    font-size: 14px;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  img {\n    width: 100%;\n  }\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <div className=\"App\">\n          <GlobalStyle />\n          <Navigation />\n          <Routes />\n          <Footer />\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}