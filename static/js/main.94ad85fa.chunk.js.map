{"version":3,"sources":["assets/images/avengers_endgame.jpg","assets/images/arrow-wallpaper.jpg","assets/images/moviemania-logo.svg","components/Context/index.js","components/Video/VideoStyles.js","components/Video/index.jsx","components/Loader/index.jsx","components/Movies/MoviesStyles.js","components/Movies/index.jsx","components/TvShows/TvShowsStyles.js","components/TvShows/index.jsx","components/VideoDetails/VideoDetailsStyles.js","components/VideoDetails/index.jsx","Routes/index.jsx","components/Navigation/Navigation.styles.js","components/Navigation/index.jsx","components/Footer/index.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","MovieManiaContext","React","createContext","baseURL","process","apiKey","Component","Consumer","Video","styled","div","_templateObject","VideoInfo","_templateObject2","VideoCard","_ref","releaseDate","title","video","type","Date","first_air_date","original_name","release_date","formattedDate","format","react_default","a","createElement","src","concat","poster_path","alt","className","LoadingComp","Loader_templateObject","Loader","Wrapper","MoviesStyles_templateObject","ContainerFluid","MoviesStyles_templateObject2","HeroImage","_templateObject3","require","MovieGridContainer","_templateObject4","Movies","state","movies","error","fetchMovies","endpoint","fetch","then","response","json","data","_this","storeMovies","results","catch","setState","map","result","vote_count","id","genre_ids","vote_average","this","length","components_Loader","Fragment","movie","react_router_dom","to","key","components_Video","TvShowsStyles_templateObject","TvShowsStyles_templateObject2","TvShowsStyles_templateObject3","TvShowGridContainer","TvShowsStyles_templateObject4","Tvshows","tvShows","TvShowsStyles_Wrapper","TvShowsStyles_HeroImage","TvShowsStyles_ContainerFluid","show","VideoDetailsStyles_templateObject","PlayButton","button","VideoDetailsStyles_templateObject2","VideoDetailsStyles_templateObject3","VideoTrailer","VideoDetailsStyles_templateObject4","VideoDetails","loading","showVideoTrailer","videoDetails","backdrop_path","overview","videoTitle","trailerId","fetchVideoDetails","_this$props$match","props","match","url","videoId","params","videoType","test","videoDetailsEndpoint","videoTrailerEndpoint","Promise","all","resp","storeVideoDetails","toggleVideoTrailer","prevState","date","_data$","videos","_this$state","_this$state$videoDeta","Object","keys","VideoDetailsStyles_Video","VideoDetailsStyles_VideoInfo","onClick","aria-labelledby","allowFullScreen","width","height","frameBorder","Routes","react_router","path","component","exact","Nav","nav","Navigation_styles_templateObject","UpperNav","Navigation_styles_templateObject2","LowerNav","Navigation_styles_templateObject3","Logo","img","Navigation_styles_templateObject4","Navigation","Background","Footer_templateObject","Footer","href","theme","specialFont","GlobalStyle","createGlobalStyle","App_templateObject","App","styled_components_browser_esm","components_Navigation","src_Routes","components_Footer","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.94ad85fa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avengers_endgame.8bef76c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-wallpaper.651a09d0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/moviemania-logo.24c12bfb.svg\";","import React, { Component } from 'react';\nimport { format } from 'date-fns';\n\nconst MovieManiaContext = React.createContext();\n\nconst baseURL = process.env.REACT_APP_BASE_URL;\nconst apiKey = process.env.REACT_APP_TMDB_API_KEY;\n\nexport class Provider extends Component {\n  state = {\n    loading: false,\n    error: '',\n    tvShows: [],\n    movies: [],\n    videoDetails: {\n      vote_average: '',\n      backdrop_path: '',\n      overview: '',\n      videoTitle: '',\n      releaseDate: '',\n    }\n  }\n\n  componentDidMount() {\n    this.fetchVideoDetails()\n  }\n\n  fetchVideoDetails = () => {\n    const { url, videoId } = this.props;\n    const regEx = /movie/;\n    const videoType = regEx.test(url) ? 'movie' : 'tv'\n\n    const endpoint = `${baseURL}/${videoType}/${videoId}?api_key=${apiKey}&language=en-US`;\n      \n    fetch(endpoint)\n      .then(resp => resp.json())\n      .then(details => this.storeVideoDetails(details))\n      .catch(error => this.setState({error}));\n  }\n\n  storeVideoDetails = data => {\n    const {\n      vote_average,\n      backdrop_path,\n      overview,\n      original_name,\n      title,\n      first_air_date,\n      release_date,\n    } = data;\n\n    const { url } = this.props.match;\n    const regEx = /movie/;\n    \n    let date;\n    let videoTitle;\n\n    if (regEx.test(url)) {\n      videoTitle = title;\n      date = new Date(release_date);\n    } else {\n      videoTitle = original_name;\n      date = new Date(first_air_date);\n    }\n  \n    const releaseDate = format(date, 'MMM DD, YYYY');\n\n    this.setState({\n      videoDetails: {\n        vote_average,\n        backdrop_path,\n        overview,\n        videoTitle,\n        releaseDate,\n      }\n    });\n  }\n\n  render() {\n    const {\n      tvShows,\n      movies,\n      videoDetails: {\n        vote_average,\n        backdrop_path,\n        overview,\n        videoTitle,\n        releaseDate,\n      }\n    } = this.state;\n\n    return (\n      <>\n        <MovieManiaContext.Provider value={{\n          tvShows,\n          movies,\n          videoDetails: {\n            vote_average,\n            backdrop_path,\n            overview,\n            videoTitle,\n            releaseDate,\n          },\n          actions: {\n            fetchVideoDetails: this.fetchVideoDetails()\n          }\n        }}>\n          { this.props.children }\n        </MovieManiaContext.Provider>\n      </>\n    )\n  }\n}\n\nexport const Consumer = MovieManiaContext.Consumer;","import styled from 'styled-components';\n\nconst Video = styled.div`\n  img {\n    width: 100%;\n    transition: transform 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);\n\n    &:hover {\n      box-shadow: 0 16px 30px -8px rgba(0,0,0,.15);\n      transform: translateY(-8px);\n    }\n  }\n`;\n\nconst VideoInfo = styled.div`\n  cursor: pointer;\n\n  .movieTitle {\n    font-weight: 300;\n    font-size: 1.2em;\n    color: #000 !important;\n  }\n  .releaseDate {\n    font-weight: 300;\n    color: grey;\n    margin-top: -10px;\n\n    &:hover {\n      color: grey !important;\n    }\n  }\n`;\n\nexport { Video, VideoInfo };\n","import React from 'react';\nimport { format } from 'date-fns';\nimport { Video, VideoInfo } from './VideoStyles';\n\nconst VideoCard = ({ video, type }) => {\n  let releaseDate;\n  let title;\n\n  if (type === 'tv') {\n    releaseDate = new Date(video.first_air_date);\n    title = video.original_name;\n  } else {\n    releaseDate = new Date(video.release_date);\n    title = video.title;\n  }\n\n  const formattedDate = format(releaseDate, 'MMM DD, YYYY');\n\n  return (\n    <Video>\n      <img\n        src={`https://image.tmdb.org/t/p/w342/${video.poster_path}`}\n        alt=\"movie_poster\"\n      />\n      <VideoInfo>\n        <p className=\"movieTitle\">{title}</p>\n        <p className=\"releaseDate\">{formattedDate}</p>\n      </VideoInfo>\n    </Video>\n  );\n};\n\nexport default VideoCard;\n","import React from 'react';\nimport styled from 'styled-components';\nimport './loader.scss';\n\n// Loader Reference: https://codepen.io/hafizfattah/pen/AbBtc\nconst LoadingComp = styled.div`\n  .loader{\n    margin: 200px auto;\n    min-height: 100vh;\n  }\n\n  h1 {\n    font-family: 'Actor', sans-serif;\n    color:#FFF;\n    font-size:16px;\n    letter-spacing:1px;\n    font-weight:200;\n    text-align:center;\n  }\n\n  .loader span{\n    width:16px;\n    height:16px;\n    border-radius:50%;\n    display:inline-block;\n    position:absolute;\n    left:50%;\n    margin-left:-10px;\n    -webkit-animation:3s infinite linear;\n    -moz-animation:3s infinite linear;\n    -o-animation:3s infinite linear;\n  }\n\n  .loader span:nth-child(2){\n    background:#E84C3D;\n    -webkit-animation:kiri 1.2s infinite linear;\n    -moz-animation:kiri 1.2s infinite linear;\n    -o-animation:kiri 1.2s infinite linear;\n  }\n\n  .loader span:nth-child(3){\n    background:#F1C40F;\n    z-index:100;\n  }\n\n  .loader span:nth-child(4){\n    background:#2FCC71;\n    -webkit-animation:kanan 1.2s infinite linear;\n    -moz-animation:kanan 1.2s infinite linear;\n    -o-animation:kanan 1.2s infinite linear;\n  }\n\n  @-webkit-keyframes kanan {\n    0% {-webkit-transform:translateX(20px);\n    }\n    \n    50%{-webkit-transform:translateX(-20px);\n    }\n    \n    100%{-webkit-transform:translateX(20px);\n    z-index:200;\n    }\n  }\n\n  @-moz-keyframes kanan {\n    0% {-moz-transform:translateX(20px);} \n    50%{-moz-transform:translateX(-20px);}\n    100%{-moz-transform:translateX(20px); z-index:200;}\n  }\n\n    @-o-keyframes kanan {\n      0% {-o-transform:translateX(20px);\n    }\n    \n    50%{-o-transform:translateX(-20px);\n    }\n    \n    100%{-o-transform:translateX(20px);\n    z-index:200;\n    }\n  }\n\n  @-webkit-keyframes kiri {\n    0% {\n      -webkit-transform:translateX(-20px);\n      z-index:200;\n    }\n    50%{\n      -webkit-transform:translateX(20px);\n    }\n    100%{\n      -webkit-transform:translateX(-20px);\n    }\n  }\n\n  @-moz-keyframes kiri {\n    0% {\n      -moz-transform:translateX(-20px);\n      z-index:200;\n    }\n    50%{\n      -moz-transform:translateX(20px);\n    }\n    100%{\n      -moz-transform:translateX(-20px);\n    }\n  }\n\n  @-o-keyframes kiri {\n    0% {\n      -o-transform:translateX(-20px);\n      z-index:200;\n    }\n    50%{\n      -o-transform:translateX(20px);\n    }\n    100%{\n      -o-transform:translateX(-20px);\n    }\n  }\n`;\n\nconst Loader = () => (\n  <LoadingComp>\n    <div className=\"loader\">\n      <h1>LOADING</h1>\n      <span></span>\n      <span></span>\n      <span></span>\n    </div>\n  </LoadingComp>\n);\n\nexport default Loader;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst ContainerFluid = styled.div`\n  display: grid;\n  padding: 0 50px;\n`;\n\nconst HeroImage = styled.div`\n  height: 600px;\n  clip-path: polygon(0 0,0 98%,100% 92%,100% 0);\n  background-position: top;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-image: url(${require(\"../../assets/images/avengers_endgame.jpg\")});\n`;\n\nconst MovieGridContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  grid-gap: 20px;\n  justify-items: center;\n  align-items: start;\n  background: white;\n  margin: -80px 0 auto;\n  z-index: 1000;\n  padding: 30px 20px;\n`;\n\nexport { Wrapper, ContainerFluid, HeroImage, MovieGridContainer };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Video from '../Video';\nimport Loader from '../Loader';\nimport { Wrapper, ContainerFluid, HeroImage, MovieGridContainer } from './MoviesStyles';\n\nconst apiKey = process.env.REACT_APP_TMDB_API_KEY;\nconst baseURL = process.env.REACT_APP_BASE_URL;\n\nclass Movies extends React.Component {\n  state = {\n    movies: [],\n    error: ''\n  }\n\n  componentDidMount() {\n    this.fetchMovies();\n  }\n\n  fetchMovies = () => {\n    const endpoint = `${baseURL}/discover/movie?api_key=${apiKey}&language=en-US&sort_by=popularity.desc`;\n\n    return fetch(endpoint)\n      .then(response => response.json())\n      .then(data => this.storeMovies(data.results))\n      .catch(error => this.setState({ error }));\n  }\n\n  storeMovies = (data) => {\n    const movies = data.map(result => {\n      const  { vote_count, id, genre_ids, poster_path, title, vote_average, release_date } = result;\n      return { vote_count, id, genre_ids, poster_path, title, vote_average, release_date };\n    })\n    this.setState({movies});\n  }\n\n  render() {\n    const { movies } = this.state;\n  \n    return (\n      <Wrapper>\n        {\n          movies.length === 0\n          ? <Loader />\n          : (\n            <>\n              <HeroImage />\n              <ContainerFluid>\n                <MovieGridContainer>\n                  {movies.map(movie => (\n                    <Link to={`/movie/${movie.id}`} key={movie.id}>\n                      <Video key={movie.id} type='movie' video={movie} />\n                    </Link>\n                  ))}\n                </MovieGridContainer>\n              </ContainerFluid>\n            </>\n          )\n        }\n      </Wrapper>\n    )\n  }\n};\n\nexport default Movies;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst ContainerFluid = styled.div`\n  display: grid;\n  padding: 0 50px;\n`;\n\nconst HeroImage = styled.div`\n  height: 600px;\n  clip-path: polygon(0 0,0 98%,100% 92%,100% 0);\n  background-position: top;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-image: url(${require(\"../../assets/images/arrow-wallpaper.jpg\")});\n`;\n\nconst TvShowGridContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  grid-gap: 20px;\n  justify-items: center;\n  align-items: start;\n  background: white;\n  margin: -80px 0 auto;\n  z-index: 1000;\n  padding: 30px 20px;\n`;\n\nexport { Wrapper, ContainerFluid, HeroImage, TvShowGridContainer }\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ContainerFluid, HeroImage, TvShowGridContainer, Wrapper } from './TvShowsStyles';\nimport Video from '../Video';\nimport Loader from '../Loader';\n\nconst apiKey = process.env.REACT_APP_TMDB_API_KEY;\nconst baseURL = process.env.REACT_APP_BASE_URL;\n\nclass Tvshows extends React.Component {\n  state = {\n    tvShows  : []\n  }\n\n  componentDidMount() {\n    this.fetchMovies();\n  }\n\n  fetchMovies = () => {\n    const endpoint = `${baseURL}/discover/tv?api_key=${apiKey}&language=en-US&sort_by=popularity.desc`;\n\n    return fetch(endpoint)\n      .then(response => response.json())\n      .then(data => this.storeMovies(data.results))\n      .catch(error => this.setState({ error }));\n  }\n\n  storeMovies = (data) => {\n    const tvShows = data.map(result => {\n      const  { vote_count, id, genre_ids, poster_path, original_name, vote_average, first_air_date } = result;\n      return { vote_count, id, genre_ids, poster_path, original_name, vote_average, first_air_date };\n    })\n    this.setState({tvShows});\n  }\n\n  render() {\n    const { tvShows } = this.state;\n  \n    return (\n      <Wrapper>\n        {\n          tvShows.length === 0\n          ? <Loader />\n          : (\n            <>\n              <HeroImage />\n              <ContainerFluid>\n                <TvShowGridContainer>\n                  {tvShows.map(show => (\n                    <Link to={`/tv/${show.id}`} key={show.id}>\n                      <Video key={show.id} type=\"tv\" video={show}/>\n                    </Link>\n                  ))}\n                </TvShowGridContainer>\n              </ContainerFluid>\n            </>\n          )\n        }\n      </Wrapper>\n    );\n  }\n};\n\nexport default Tvshows;\n","import styled from 'styled-components';\n\nconst Video = styled.div`\n\n  img {\n    max-height: 100%;\n    max-width: 100%;\n    object-fit: cover;\n    z-index: -10;\n  }\n\n  .backdrop {\n    height: 680px;\n    box-sizing: border-box;\n    background-size: cover;\n    color: white;\n  }\n\n  .backdropBg {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    align-items: center;\n    justify-items: center;\n    width: 100%;\n    height: inherit;\n    position: absolute;\n    top: 92px;\n    background-color: rgba(0,0,0,0.7);\n\n    .moreDetails {\n      display: grid;\n      grid-template-columns: repeat(4, 1fr);\n      grid-gap: 15px;\n\n      .videoRating {\n        color: #ddd;\n  \n        .fa-fire {\n          border-radius: 50%;\n          border: 1px solid #ddd;\n          padding: 5px 7px;\n          color: #e50603;\n          margin-right: 5px;\n        }\n      }\n    }\n  }\n`;\n\nconst PlayButton = styled.button`\n  background-color: #e50603;\n  padding: 6px 10px;\n  cursor: pointer;\n  font-size: 1.2rem;\n  border-radius: 4px;\n  transition: 0.5s background-color cubic-bezier(0.075, 0.82, 0.165, 1);\n  color: white;\n  border: none;\n  font-size: 0.9rem;\n\n  &:hover {\n    background-color: #d84443;\n  }\n\n  .fa-play {\n    margin-right: 5px;\n  }\n`;\n\nconst VideoInfo = styled.div`\n  max-width: 450px;\n\n  h1 {\n    font-size: 3.2rem;\n    font-family: 'DINNextW01-Bold';\n    text-align: left;\n  }\n\n  p {\n    font-family: 'Helvetica Neue';\n    line-height: 1.5rem;\n    font-size: 1.1rem;\n  }\n\n  .releaseDate {\n    font-size: 0.9rem;\n    margin-top: -2.2rem;\n    color: #999;\n  }\n`;\n\nconst VideoTrailer = styled.div`\n  left: 0px;\n  top: 90px;\n  z-index: 100;\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  background: rgba(0,0,0,.5);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-items: center;\n\n  iframe {\n    /* position: fixed; */\n  }\n\n  .closeTrailer {\n    background: #000;\n    width: 1200px;\n    height: 50px;\n    display: grid;\n    grid-template-columns: 1fr;\n    justify-items: end;\n    align-items: center;\n\n    .fa-times {\n      font-size: 20px;\n      color: #555;\n      font-weight: 900;\n      cursor: pointer;\n      margin-right: 10px;\n\n      &:hover {\n        color: #777;\n      }\n    }\n  }\n`;\n\nexport { Video, PlayButton, VideoInfo, VideoTrailer };\n","import React, { Component } from 'react';\nimport { format } from 'date-fns';\nimport { Consumer } from '../Context';\nimport Loader from '../Loader';\nimport { Video, PlayButton, VideoInfo, VideoTrailer } from './VideoDetailsStyles';\n\nconst baseURL = process.env.REACT_APP_BASE_URL;\nconst apiKey = process.env.REACT_APP_TMDB_API_KEY;\n\nclass VideoDetails extends Component {\n  state = {\n    loading: false,\n    showVideoTrailer: false,\n    error: '',\n    videoDetails: {\n      vote_average: '',\n      backdrop_path: '',\n      overview: '',\n      videoTitle: '',\n      releaseDate: '',\n      trailerId: '',\n    }\n  }\n\n  componentDidMount() {\n    this.fetchVideoDetails();\n  }\n\n  /** \n   * Fetch the detailes of video\n   * @returns null\n  */\n  fetchVideoDetails = () => {\n    const { url, params: { videoId } } = this.props.match;\n    const regEx = /movie/;\n    const videoType = regEx.test(url) ? 'movie' : 'tv'\n\n    const videoDetailsEndpoint = `${baseURL}/${videoType}/${videoId}?api_key=${apiKey}&append_to_response=credits`;\n    const videoTrailerEndpoint = `${baseURL}/${videoType}/${videoId}?api_key=${apiKey}&append_to_response=videos`;\n\n    const fetchedVideoDetails = Promise.all([\n      fetch(videoDetailsEndpoint).then(resp => resp.json()),\n      fetch(videoTrailerEndpoint).then(resp => resp.json())\n    ]);\n\n    fetchedVideoDetails.then(data => this.storeVideoDetails(data));\n  }\n\n  toggleVideoTrailer = () => {\n    this.setState(prevState => ({\n      showVideoTrailer: !prevState.showVideoTrailer\n    }));\n  }\n\n  storeVideoDetails = data => {\n    const {\n      vote_average,\n      backdrop_path,\n      overview,\n      original_name,\n      title,\n      first_air_date,\n      release_date,\n    } = data[0];\n\n    const {videos: { results }} = data[1];\n    const trailerId = results[0].key;\n\n    const { url } = this.props.match;\n    const regEx = /movie/;\n    \n    let date;\n    let videoTitle;\n\n    if (regEx.test(url)) {\n      videoTitle = title;\n      date = new Date(release_date);\n    } else {\n      videoTitle = original_name;\n      date = new Date(first_air_date);\n    }\n  \n    const releaseDate = format(date, 'MMM DD, YYYY');\n\n    this.setState({\n      videoDetails: {\n        vote_average,\n        backdrop_path,\n        overview,\n        videoTitle,\n        releaseDate,\n        trailerId,\n      }\n    });\n  }\n\n  render() {\n    const {\n      showVideoTrailer,\n      videoDetails,\n      videoDetails: {\n        backdrop_path,\n        videoTitle,\n        overview,\n        releaseDate,\n        vote_average,\n        trailerId,\n      } \n    } = this.state;\n      \n    return (\n      <>\n        {Object.keys(videoDetails).length === 0\n          ? <Loader />\n          : (\n            <>\n              <Video>\n                <div className=\"backdrop\">\n                  <img\n                    src={`https://image.tmdb.org/t/p/original${backdrop_path}`}\n                    alt=\"video_backdrop\"\n                  />\n                  <div className='backdropBg'>\n                    <div>\n                      <VideoInfo>\n                        <h1>{videoTitle}</h1>\n                        <p className='releaseDate'>Release Date: {releaseDate}</p>\n                        <p>{overview}</p>\n                      </VideoInfo>\n\n                      <div className='moreDetails'>\n                        <PlayButton\n                          type='button'\n                          onClick={this.toggleVideoTrailer}\n                          aria-labelledby='play-button'\n                        >\n                          <i className=\"fas fa-play\"></i>\n                          <span>Play Trailer</span>\n                        </PlayButton>\n\n                        <div className='videoRating'>\n                          <i className=\"fas fa-fire\"></i>\n                          <span>{vote_average} / 10</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </Video>\n              {showVideoTrailer && (\n                <VideoTrailer>\n                  <div className=\"closeTrailer\">\n                    <i\n                      className=\"fa fa-times\"\n                      aria-labelledby=\"close-trailer\"\n                      onClick={this.toggleVideoTrailer}\n                    >\n                    </i>\n                  </div>\n                  <iframe\n                    src={`https://www.youtube.com/embed/${trailerId}`}\n                    title= \"videoTrailer\"\n                    allowFullScreen\n                    width=\"1200\"\n                    height=\"650\"\n                    frameBorder=\"0\"\n                  >\n                  </iframe>\n                </VideoTrailer>\n              )}\n            </>\n          )\n        }\n      </>\n    );\n  }\n}\n\nexport default VideoDetails;","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport Movies from '../components/Movies';\nimport Tvshows from '../components/TvShows';\nimport VideoDetails from '../components/VideoDetails';\n\nconst Routes = () => (\n  <Switch>\n    <Route path=\"/\" component={Movies} />\n    <Route exact path=\"/movies\" component={Movies} />\n    <Route exact path=\"/tv\" component={Tvshows} />\n    <Route exact path=\"/tv/:videoId/\" component={VideoDetails} />\n    <Route exact path=\"/movie/:videoId/\" component={VideoDetails} />\n  </Switch>\n);\n\nexport default Routes;\n","import styled from 'styled-components';\n\nconst Nav = styled.nav`\n  height: 92px;\n  background: #22262A;\n`;\n\nconst UpperNav = styled.div`\n  height: 52px;\n  border: 1px solid #393939;\n  display: grid;\n  grid-template-columns: 1fr;\n  place-items: center;\n`;\n\nconst LowerNav = styled.div`\n  height: 40px;\n  display: grid;\n  grid-template-columns: 1fr;\n  align-items: center;\n  justify-items: center;\n  color: white;\n\n  .navItems {\n    width: 200px;\n    display: grid;\n    grid-template-columns : repeat(2, 1fr);\n    justify-items: center;\n\n    a {\n      text-decoration: none;\n      color: #fff !important;\n      transition: 0.3s color ease-in-out;\n      display: block;\n    }\n\n    a:hover {\n      color: #777 !important;\n    }\n\n    li {\n      list-style: none;\n    }\n  }\n\n`;\n\nconst Logo = styled.img`\n  height: 2.5rem;\n  width: auto;\n`;\n\nexport { Nav, UpperNav, LowerNav, Logo }\n","import React from 'react';\nimport { Link, Router } from 'react-router-dom';\nimport { Nav, UpperNav, LowerNav, Logo } from './Navigation.styles';\n\nclass Navigation extends React.Component {\n  state = {};\n\n  render() {\n    return (\n      <Nav>\n        <UpperNav>\n          <Logo src={require('../../assets/images/moviemania-logo.svg')}/>\n        </UpperNav >\n        <LowerNav>\n          <div className='navItems'>\n            <li><Link to=\"/movies\">MOVIES</Link></li>\n            <li><Link to=\"/tv\">TV SHOWS</Link></li>\n          </div>\n        </LowerNav>\n      </Nav>\n    );\n  }\n}\n\nexport default Navigation;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Background = styled.div`\n  height: 70px;\n  background: #393939;\n  color: #fff;\n  text-align: center;\n  display: grid;\n  place-items: center;\n\n  a {\n    text-decoration: none;\n    color: red;\n  }\n`;\n\nconst Footer = () => (\n  <Background>\n    <p>Made with ❤ by <a href='https://twitter.com/emma_adesile'>Emmanuel</a></p>\n  </Background>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport Routes from './Routes';\nimport Navigation from './components/Navigation';\nimport Footer from './components/Footer';\nimport './App.css';\n\nconst theme = {\n  specialFont: 'DINNextW01-Bold'\n}\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: \"DINNextW01-Bold\";\n    src: url(\"./assets/fonts/DINNextW01-Bold.otf\") format(otf);\n  }\n\n  * {\n    outline: none;\n  }\n\n  body {\n    font-size: 1rem;\n  }\n\n  html {\n    font-family: ${props => props.theme.specialFont ? 'DINNextW01-Bold': 'Helvetica Neue'};\n    box-sizing: border-box;\n    font-size: 14px;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  img {\n    width: 100%;\n  }\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <div className=\"App\">\n          <GlobalStyle />\n          <Navigation />\n          <Routes />\n          <Footer />\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from './components/Context';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}